# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-npm:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm install
    - run: docker build . --file Dockerfile --tag amol037/amol:mandloi
    - run: docker images
    - run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
    - run: docker push amol037/amol:mandloi
    
    - name: Azure Kubernetes set context
      uses: Azure/aks-set-context@v1.1
      with:
        # Azure credentials i.e. output of `az ad sp create-for-rbac --sdk-auth`
        creds: ${{secrets.AZURE_CREDENTIALS}}
        # Resource Group Name
        resource-group: # optional, default is 
        # AKS Cluster Name
        cluster-name: # optional, default is 
        
        
    - name: Create secret in Kubernetes cluster
      uses: Azure/k8s-create-secret@v1.1
      with:

        # Container registry url
        container-registry-url: https://index.docker.io/v1/
        # Container registry username
        container-registry-username: ${{secrets.DOCKER_USERNAME}}
        # Container registry password
        container-registry-password: ${{secrets.DOCKER_PASSWORD}}

        # Type of Kubernetes secret. For example, docker-registry or generic
        secret-type: docker-registry
        # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
        secret-name: docker-image-pull-secret
        
        
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v1.3
      with:

        # Path to the manifest files which will be used for deployment.
        manifests: |
          deployment/deployment.yaml
          deployment/service.yaml
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: amol037/amol:mandloi
        # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
        imagepullsecrets: docker-image-pull-secret


        # deploy/promote/reject
        action: deploy

